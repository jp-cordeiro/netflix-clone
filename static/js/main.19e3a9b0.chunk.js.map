{"version":3,"sources":["components/Jumbotron/styles/jumbotron.js","components/Jumbotron/index.js","App.js","global-styles.js","index.js"],"names":["Item","styled","div","Inner","direction","Container","Pane","Title","h1","SubTitle","h2","Image","img","Jumbotron","children","restProps","App","className","jumboData","map","item","title","subTitle","src","image","alt","id","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m7BAEaA,EAAOC,IAAOC,IAAV,qEAAGD,CAAH,4FAQJE,EAAQF,IAAOC,IAAV,sEAAGD,CAAH,gLAGE,qBAAGG,aAWVC,EAAYJ,IAAOC,IAAV,0EAAGD,CAAH,MAETK,EAAOL,IAAOC,IAAV,qEAAGD,CAAH,sFAUJM,EAAQN,IAAOO,GAAV,sEAAGP,CAAH,gGAULQ,EAAWR,IAAOS,GAAV,yEAAGT,CAAH,oGAURU,EAAQV,IAAOW,IAAV,sEAAGX,CAAH,kDC7CH,SAASY,EAAT,GAIX,IAHFC,EAGC,EAHDA,SAGC,IAFDV,iBAEC,MAFW,MAEX,0CACD,OACE,cAACJ,EAAD,UACE,cAACG,EAAD,CAAOC,UAAWA,EAAlB,SAA8BU,MAKpCD,EAAUR,UAAY,YAAyD,IAA3BS,EAA0B,EAA1BA,SAAaC,EAAa,4BAC5E,OAAO,cAACV,EAAD,2BAAeU,GAAf,aAA2BD,MAGpCD,EAAUP,KAAO,YAAoD,IAA3BQ,EAA0B,EAA1BA,SAAaC,EAAa,4BAClE,OAAO,cAACT,EAAD,2BAAUS,GAAV,aAAsBD,MAG/BD,EAAUN,MAAQ,YAAqD,IAA3BO,EAA0B,EAA1BA,SAAaC,EAAa,4BACpE,OAAO,cAACR,EAAD,2BAAWQ,GAAX,aAAuBD,MAGhCD,EAAUJ,SAAW,YAAwD,IAA3BK,EAA0B,EAA1BA,SAAaC,EAAa,4BAC1E,OAAO,cAACN,EAAD,2BAAcM,GAAd,aAA0BD,MAGnCD,EAAUF,MAAQ,YAAoD,EAA1BG,SAA2B,IAAdC,EAAa,4BACpE,OAAO,cAACJ,EAAD,eAAWI,K,YCjBLC,MApBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACJ,EAAUR,UAAX,UACGa,EAAUC,KAAI,SAACC,GAAD,OACb,eAACP,EAAD,CAAyBT,UAAWgB,EAAKhB,UAAzC,UACE,eAACS,EAAUP,KAAX,WACE,cAACO,EAAUN,MAAX,UAAkBa,EAAKC,QACvB,cAACR,EAAUJ,SAAX,UAAqBW,EAAKE,cAE5B,cAACT,EAAUP,KAAX,UACE,cAACO,EAAUF,MAAX,CAAiBY,IAAKH,EAAKI,MAAOC,IAAKL,EAAKK,UANhCL,EAAKM,Y,0VCNxB,IAAMC,EAAeC,YAAH,KCGzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qCACE,cAACJ,EAAD,IACA,cAAC,EAAD,SAGJK,SAASC,eAAe,W","file":"static/js/main.19e3a9b0.chunk.js","sourcesContent":["import styled from 'styled-components/macro';\n\nexport const Item = styled.div`\n  display: flex;\n  border-bottom: 8px solid #222;\n  padding: 50px 5%;\n  color: white;\n  overflow: hidden;\n`;\n\nexport const Inner = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: ${({ direction }) => direction};\n  justify-content: space-between;\n  max-width: 1100px;\n  margin: auto;\n  width: 100%;\n\n  @media (max-width: 1000px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Container = styled.div``;\n\nexport const Pane = styled.div`\n  width: 50%;\n\n  @medi (max-width: 1000px) {\n    width: 100%;\n    padding: 0 45px;\n    text-align: center;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 50px;\n  line-height: 1.1;\n  margin-bottom: 8px;\n\n  @media (max-width: 600px) {\n    font-size: 35px;\n  }\n`;\n\nexport const SubTitle = styled.h2`\n  font-size: 26px;\n  font-weight: normal;\n  line-height: normal;\n\n  @media (max-width: 600px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  heigth: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport {\n  Container,\n  Item,\n  Inner,\n  Pane,\n  Title,\n  SubTitle,\n  Image,\n} from './styles/jumbotron';\n\nexport default function Jumbotron({\n  children,\n  direction = 'row',\n  ...restProps\n}) {\n  return (\n    <Item>\n      <Inner direction={direction}>{children}</Inner>\n    </Item>\n  );\n}\n\nJumbotron.Container = function JumbotronContainer({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n};\n\nJumbotron.Pane = function JumbotronPane({ children, ...restProps }) {\n  return <Pane {...restProps}>{children}</Pane>;\n};\n\nJumbotron.Title = function JumbotronTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\nJumbotron.SubTitle = function JumbotronSubTitle({ children, ...restProps }) {\n  return <SubTitle {...restProps}>{children}</SubTitle>;\n};\n\nJumbotron.Image = function JumbotronImage({ children, ...restProps }) {\n  return <Image {...restProps} />;\n};\n","import Jumbotron from './components/Jumbotron';\nimport jumboData from './fixtures/jumbo.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron.Container>\n        {jumboData.map((item) => (\n          <Jumbotron key={item.id} direction={item.direction}>\n            <Jumbotron.Pane>\n              <Jumbotron.Title>{item.title}</Jumbotron.Title>\n              <Jumbotron.SubTitle>{item.subTitle}</Jumbotron.SubTitle>\n            </Jumbotron.Pane>\n            <Jumbotron.Pane>\n              <Jumbotron.Image src={item.image} alt={item.alt} />\n            </Jumbotron.Pane>\n          </Jumbotron>\n        ))}\n      </Jumbotron.Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\nhtml,body{\n  font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif, Arial, Helvetica, sans-serif, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: black;\n  color: #333333;\n  font-size: 16px;\n}\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyles } from './global-styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <GlobalStyles />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}